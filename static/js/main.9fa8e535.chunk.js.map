{"version":3,"sources":["components/Profile/Profile.module.css","components/Statistics/Statistics.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/Layout/Layout.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Layout/Layout.js","components/Profile/Profile.js","utils/getRandomColor.js","components/Statistics/Statistics.js","components/FriendList/FriendListItem/FriendListItem.js","components/FriendList/FriendList.js","components/TransactionHistory/TBodyRow/TBodyRow.js","components/TransactionHistory/TransactionHistory.js","App.js","index.js"],"names":["module","exports","Layout","title","children","className","styles","task","task__title","defaultProps","Profile","name","tag","location","avatar","stats","followers","views","likes","profile","src","alt","statsItem","label","quantity","getRandomColor","color","i","Math","floor","random","Statistics","statistics","length","statList","map","id","percentage","style","backgroundColor","statList__item","warning","FriendListItem","statusClasses","isOnline","online","offline","item","width","FriendList","friends","friendList","TBodyRow","type","amount","currency","TransactionHistory","items","transaction__history","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa8e535.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3DBaR\",\"avatar\":\"Profile_avatar__379Uw\",\"name\":\"Profile_name__1g4Sa\",\"tag\":\"Profile_tag__1d8jL\",\"location\":\"Profile_location__2GEHZ\",\"stats\":\"Profile_stats__1SZ1-\",\"statsItem\":\"Profile_statsItem__ovU5d\",\"label\":\"Profile_label__1msQY\",\"quantity\":\"Profile_quantity__fls6m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1hhWZ\",\"title\":\"Statistics_title__29P_4\",\"statList\":\"Statistics_statList__2nbv0\",\"statList__item\":\"Statistics_statList__item__F0GJ1\",\"label\":\"Statistics_label__2WQEO\",\"percentage\":\"Statistics_percentage__Mt72n\",\"warning\":\"Statistics_warning__21v0_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2P-Ca\",\"status\":\"FriendListItem_status__1InTM\",\"online\":\"FriendListItem_online__3itSs FriendListItem_status__1InTM\",\"offline\":\"FriendListItem_offline__1MgjU FriendListItem_status__1InTM\",\"avatar\":\"FriendListItem_avatar__19sjj\",\"name\":\"FriendListItem_name__2dXuA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Layout_task__2hsi6\",\"task__title\":\"Layout_task__title__mn3Bq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"FriendList_friendList__25PA4\",\"warning\":\"FriendList_warning__1lUJ5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction__history\":\"TransactionHistory_transaction__history__1iHx1\",\"warning\":\"TransactionHistory_warning__2jMln\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Layout.module.css\";\n\nconst Layout = ({ title, children }) => (\n  <section className={styles.task}>\n    {title && <h2 className={styles.task__title}>{title}</h2>}\n    {children}\n  </section>\n);\n\nLayout.defaultProps = {\n  title: \"\",\n};\n\nLayout.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Profile.module.css\";\n\nconst Profile = ({\n  name,\n  tag,\n  location,\n  avatar,\n  stats: { followers, views, likes },\n}) => (\n  <div className={styles.profile}>\n    <div className=\"description\">\n      <img src={avatar} alt=\"user avatar\" className={styles.avatar} />\n      <p className={styles.name}>{name}</p>\n      <p className={styles.tag}>@{tag}</p>\n      <p className={styles.location}>{location}</p>\n    </div>\n\n    <ul className={styles.stats}>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Followers</span>\n        <span className={styles.quantity}>{followers}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Views</span>\n        <span className={styles.quantity}>{views}</span>\n      </li>\n      <li className={styles.statsItem}>\n        <span className={styles.label}>Likes</span>\n        <span className={styles.quantity}>{likes}</span>\n      </li>\n    </ul>\n  </div>\n);\n\nProfile.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.exact({\n    followers: PropTypes.number.isRequired,\n    views: PropTypes.number.isRequired,\n    likes: PropTypes.number.isRequired,\n  }).isRequired,\n};\n\nexport default Profile;\n","export default function getRandomColor() {\n  let letters = \"0123456789ABCDEF\";\n  let color = \"#\";\n  for (let i = 0; i < 6; i += 1) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Statistics.module.css\";\n\nimport getRandomColor from \"../../utils/getRandomColor\";\n\nconst Statistics = ({ title, stats }) => (\n  <section className={styles.statistics}>\n    {title && <h2 className={styles.title}>{title}</h2>}\n\n    {stats.length > 0 ? (\n      <ul className={styles.statList}>\n        {stats.map(({ id, percentage, label }) => (\n          <li\n            key={id}\n            style={{ backgroundColor: getRandomColor() }}\n            className={styles.statList__item}\n          >\n            <span className={styles.label}>{label}</span>\n            <span className={styles.percentage}>{percentage}%</span>\n          </li>\n        ))}\n      </ul>\n    ) : (\n      <p className={styles.warning}>Nothing was transferred</p>\n    )}\n  </section>\n);\n\nStatistics.defaultProps = {\n  title: \"\",\n};\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      percentage: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default Statistics;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./FriendListItem.module.css\";\n\nconst FriendListItem = ({ avatar, name, isOnline }) => {\n  const statusClasses = isOnline ? styles.online : styles.offline;\n  return (\n    <li className={styles.item}>\n      <span className={statusClasses}></span>\n      <img src={avatar} alt={name} className={styles.avatar} width=\"48\" />\n      <p className={styles.name}>{name}</p>\n    </li>\n  );\n};\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n\nexport default FriendListItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport FriendListItem from \"./FriendListItem\";\nimport styles from \"./FriendList.module.css\";\n\nconst FriendList = ({ friends }) => (\n  <>\n    {friends.length > 0 ? (\n      <ul className={styles.friendList}>\n        {friends.map(({ id, name, avatar, isOnline }) => (\n          <FriendListItem\n            key={id}\n            avatar={avatar}\n            name={name}\n            isOnline={isOnline}\n          />\n        ))}\n      </ul>\n    ) : (\n      <p className={styles.warning}>Nothing was transferred</p>\n    )}\n  </>\n);\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default FriendList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst TBodyRow = ({ type, amount, currency }) => (\n  <tr>\n    <td>{type}</td>\n    <td>{amount}</td>\n    <td>{currency}</td>\n  </tr>\n);\n\nTBodyRow.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n\nexport default TBodyRow;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport TBodyRow from \"./TBodyRow\";\n\nimport styles from \"./TransactionHistory.module.css\";\n\nconst TransactionHistory = ({ items }) => (\n  <>\n    {items.length > 0 ? (\n      <table className={styles.transaction__history}>\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Amount</th>\n            <th>Currency</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {items.map(({ id, type, amount, currency }) => (\n            <TBodyRow\n              key={id}\n              type={type}\n              amount={amount}\n              currency={currency}\n            />\n          ))}\n        </tbody>\n      </table>\n    ) : (\n      <p className={styles.warning}>Nothing was transferred</p>\n    )}\n  </>\n);\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React from \"react\";\n\nimport Layout from \"./components/Layout\";\nimport Profile from \"./components/Profile/Profile\";\nimport Statistics from \"./components/Statistics\";\nimport FriendList from \"./components/FriendList\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\n\nimport user from \"./data/user.json\";\nimport statisticalData from \"./data/statistical-data.json\";\nimport friends from \"./data/friends.json\";\nimport transactions from \"./data/transactions.json\";\n\nconst App = () => (\n  <>\n    <Layout title=\"Профіль соціальної мережі\">\n      <Profile {...user} />\n    </Layout>\n\n    <Layout title=\"Секція статистики\">\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <Statistics stats={statisticalData} />\n    </Layout>\n\n    <Layout title=\"Список друзів\">\n      <FriendList friends={friends} />\n    </Layout>\n\n    <Layout title=\"Історія транзакцій\">\n      <TransactionHistory items={transactions} />\n    </Layout>\n  </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}